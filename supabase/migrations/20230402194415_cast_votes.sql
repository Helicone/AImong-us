-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.cast_vote(
	p_player_id uuid,
	p_answer_id bigint)
    RETURNS void
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    question_id bigint;
    has_voted boolean;
BEGIN
    -- Get the question_id associated with the answer
    SELECT question INTO question_id
    FROM public.answers
    WHERE id = p_answer_id;

    IF question_id IS NULL THEN
        RAISE EXCEPTION 'The answer_id provided does not exist.'
        USING HINT = 'Ensure the answer_id is valid before casting a vote.';
    END IF;

    -- Check if the player has already voted for the question
    SELECT EXISTS (
        SELECT 1
        FROM public.votes AS v
        JOIN public.answers AS a ON v.answer = a.id
        WHERE a.question = question_id AND v.player = p_player_id
    ) INTO has_voted;

    IF has_voted THEN
        RAISE EXCEPTION 'Player has already voted for this question.'
        USING HINT = 'Ensure the player has not voted for the question before calling this function.';
    ELSE
        -- Cast the vote
        INSERT INTO public.votes (player, answer)
        VALUES (p_player_id, p_answer_id);
    END IF;
END;
$BODY$;

ALTER FUNCTION public.cast_vote(uuid, bigint)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.cast_vote(uuid, bigint) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.cast_vote(uuid, bigint) TO anon;

GRANT EXECUTE ON FUNCTION public.cast_vote(uuid, bigint) TO authenticated;

GRANT EXECUTE ON FUNCTION public.cast_vote(uuid, bigint) TO postgres;

GRANT EXECUTE ON FUNCTION public.cast_vote(uuid, bigint) TO service_role;

REVOKE ALL ON TABLE public.answers FROM anon;
REVOKE ALL ON TABLE public.answers FROM postgres;
REVOKE ALL ON TABLE public.answers FROM service_role;
GRANT ALL ON TABLE public.answers TO anon;

GRANT ALL ON TABLE public.answers TO service_role;

GRANT ALL ON TABLE public.answers TO postgres;

REVOKE ALL ON TABLE public.player_games FROM anon;
REVOKE ALL ON TABLE public.player_games FROM postgres;
REVOKE ALL ON TABLE public.player_games FROM service_role;
GRANT ALL ON TABLE public.player_games TO anon;

GRANT ALL ON TABLE public.player_games TO service_role;

GRANT ALL ON TABLE public.player_games TO postgres;

REVOKE ALL ON TABLE public.votes FROM anon;
REVOKE ALL ON TABLE public.votes FROM postgres;
REVOKE ALL ON TABLE public.votes FROM service_role;
GRANT ALL ON TABLE public.votes TO anon;

GRANT ALL ON TABLE public.votes TO service_role;

GRANT ALL ON TABLE public.votes TO postgres;
