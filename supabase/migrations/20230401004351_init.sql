-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.sessions
(
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    state smallint NOT NULL DEFAULT '0'::smallint,
    player_1 uuid NOT NULL,
    player_2 uuid,
    bot_id smallint,
    CONSTRAINT sessions_pkey PRIMARY KEY (id),
    CONSTRAINT sessions_player_1_fkey FOREIGN KEY (player_1)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT sessions_player_2_fkey FOREIGN KEY (player_2)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.sessions
    OWNER to postgres;

ALTER TABLE IF EXISTS public.sessions
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.sessions TO authenticated;

GRANT ALL ON TABLE public.sessions TO anon;

GRANT ALL ON TABLE public.sessions TO service_role;

GRANT ALL ON TABLE public.sessions TO postgres;

CREATE TABLE IF NOT EXISTS public.messages
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    session_id uuid NOT NULL,
    text text COLLATE pg_catalog."default" NOT NULL,
    user_id uuid,
    bot_id smallint,
    CONSTRAINT messages_pkey PRIMARY KEY (id),
    CONSTRAINT messages_session_id_fkey FOREIGN KEY (session_id)
        REFERENCES auth.sessions (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT messages_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.messages
    OWNER to postgres;

ALTER TABLE IF EXISTS public.messages
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.messages TO authenticated;

GRANT ALL ON TABLE public.messages TO anon;

GRANT ALL ON TABLE public.messages TO service_role;

GRANT ALL ON TABLE public.messages TO postgres;
